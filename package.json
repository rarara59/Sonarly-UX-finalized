{
  "name": "thorpv1",
  "version": "1.0.0",
  "type": "module",
  "description": "Renaissance-grade meme coin edge detection system with integrated RPC management",
  "main": "src/index.js",
  "engines": {
    "node": ">=18.0.0"
  },
  "scripts": {
    "test:worker-pool": "node src/tests/worker-pool.test.js",
    "test:lp-detector": "node src/tests/lp-creation-detector.test.js",
    "_comment_renaissance": "=== RENAISSANCE TRADING SYSTEM ===",
    "renaissance:start": "node --max-old-space-size=4096 src/renaissance-main.js",
    "renaissance:dev": "nodemon --exec \"node\" src/renaissance-main.js",
    "renaissance:test": "node src/tests/test-renaissance-integration.js",
    "renaissance:metrics": "curl http://localhost:9090/renaissance-metrics",
    "test:ideal-rpc": "node src/tests/test-ideal-rpc-manager.js",
    "_comment_rpc_system": "=== RPC CONNECTION MANAGER ===",
    "rpc:start": "node --max-old-space-size=4096 src/services/rpc-connection-manager.js",
    "rpc:test": "node src/tests/rpc-manager.test.js",
    "rpc:metrics": "curl http://localhost:9090/metrics",
    "rpc:health": "curl http://localhost:9090/health",
    "_comment_main_system": "=== MAIN SYSTEM OPERATIONS ===",
    "start": "NODE_OPTIONS=\"--max-old-space-size=1024 --expose-gc\" node src/index.js",
    "start:thorp": "node --max-old-space-size=4096 src/scripts/enhanced-token-discovery-loop.js",
    "start:discovery": "node src/scripts/enhanced-token-discovery-loop.js",
    "start:production": "NODE_ENV=production node --max-old-space-size=4096 src/scripts/enhanced-token-discovery-loop.js",
    "dev": "nodemon --exec \"node\" src/index.js",
    "_comment_data_review": "=== DATA REVIEW & ANALYSIS ===",
    "review": "node src/scripts/review-data.js",
    "review:daily": "node src/scripts/review-data.js --daily",
    "review:gems": "node src/scripts/review-data.js --gems-only",
    "review:weekly": "node src/scripts/review-data.js --weekly",
    "review:performance": "node src/scripts/review-data.js --performance",
    "track:token": "node -e \"import('./src/scripts/review-data.js').then(m => m.trackToken(process.argv[2]))\"",
    "_comment_testing": "=== TESTING SCRIPTS ===",
    "test": "jest",
    "test:rpc": "node src/tests/rpc-connection-manager.test.js",
    "test:websocket": "node src/tests/websocket-integration.test.js",
    "test:jupiter": "node src/tests/jupiter-monitor.test.js",
    "test:chain": "node src/scripts/test-chain-monitor.js",
    "test:connection": "node src/scripts/test-connection.js",
    "test:wallet": "node src/scripts/test-wallet-monitor.js",
    "test:solscan": "node src/tests/solscan-test.js",
    "test:data": "node src/tests/data-handler-test.js",
    "test:webhook": "node src/tests/webhook-test.js",
    "test:monitor": "node src/tests/transaction-monitor-test.js",
    "test:alerts": "node src/tests/alert-system-test.js",
    "test:monitor-alerts": "node src/tests/monitor-alert-test.js",
    "test:classification": "node src/tests/classification-integration.test.js",
    "test:scheduler": "node src/tests/reclassification-scheduler.test.js",
    "test:classification-history": "node src/tests/classification-history.test.js",
    "_comment_seeding": "=== DATABASE SEEDING ===",
    "setup-db": "node src/scripts/setup-mongodb.js",
    "seed:dev": "node src/scripts/seed-database.js",
    "seed:dev:full": "node src/scripts/seed-database.js --full",
    "seed:dev:force": "node src/scripts/seed-database.js --yes",
    "seed:dev:verbose": "node src/scripts/seed-database.js --verbose",
    "seed:smart-wallets": "node src/scripts/seed-smart-wallets.js",
    "_comment_classification": "=== CLASSIFICATION SYSTEM ===",
    "classification:setup": "node src/scripts/setup-classification-system.js",
    "classification:validate": "node -e \"import('./src/models/classificationHistory.js').then(m => m.ClassificationHistory.countDocuments({schema_version: 2}).then(count => console.log('Migrated records:', count)))\"",
    "classification:stats": "node -e \"import('./src/models/classificationHistory.js').then(m => m.ClassificationHistory.aggregate([{$group: {_id: '$current_status', count: {$sum: 1}}}]).then(console.log))\"",
    "classification:audit": "node -e \"import('./src/models/classificationAuditTrail.js').then(m => m.ClassificationAuditTrail.getTokenHistory(process.argv[2] || 'ALL', 20).then(console.log))\"",
    "classification:reset": "node -e \"import('./src/models/classificationHistory.js').then(m => m.ClassificationHistory.deleteMany({}).then(result => console.log('Deleted', result.deletedCount, 'classification records')))\"",
    "_comment_migration": "=== DATABASE MIGRATION ===",
    "migration:analyze": "node src/scripts/migrate-classification-model.js --dry-run",
    "migration:run": "node src/scripts/migrate-classification-model.js",
    "migration:rollback": "CONFIRM_ROLLBACK=YES_I_WANT_TO_ROLLBACK node src/scripts/migrate-classification-model.js --rollback",
    "_comment_indexes": "=== INDEX MANAGEMENT ===",
    "indexes:create": "node -e \"import('./src/models/classificationHistory.js').then(m => m.ClassificationHistory.createIndexes().then(() => console.log('Indexes created')))\"",
    "indexes:audit": "node -e \"import('./src/models/classificationAuditTrail.js').then(m => m.ClassificationAuditTrail.createIndexes().then(() => console.log('Audit indexes created')))\"",
    "_comment_analytics": "=== ANALYTICS & MONITORING ===",
    "audit:rule-performance": "node -e \"import('./src/models/classificationAuditTrail.js').then(m => m.ClassificationAuditTrail.getRulePerformance(process.argv[2], 30).then(console.log))\"",
    "audit:source-analysis": "node -e \"import('./src/models/classificationHistory.js').then(m => m.ClassificationHistory.findBySource(process.argv[2] || 'batch_processor', 50).then(console.log))\"",
    "audit:changes": "node -e \"import('./src/models/classificationAuditTrail.js').then(m => m.ClassificationAuditTrail.getChangesByType(process.argv[2] || 'status_change', 7).then(console.log))\"",
    "analytics:success-rate": "node src/scripts/review-data.js --success-rate",
    "analytics:token-journey": "node src/scripts/review-data.js --journey",
    "_comment_pipeline": "=== PIPELINE TESTING ===",
    "pipeline:test": "node src/tests/test-thorp-pipeline.js",
    "pipeline:test-passing": "node src/tests/test-thorp-pipeline-passing.js",
    "discovery:run": "node src/scripts/enhanced-token-discovery-loop.js",
    "discovery:legacy": "node src/scripts/enhanced-token-discovery-loop.js --legacy-mode",
    "_comment_system_health": "=== SYSTEM HEALTH & STATUS ===",
    "health": "npm run health:rpc && npm run health:classification && npm run health:scheduler && npm run health:discovery",
    "health:rpc": "curl -f http://localhost:9090/health || echo 'RPC Manager not running'",
    "health:classification": "node -e \"import('./src/services/classification-integration.service.js').then(m => new m.ClassificationIntegrationService().getSystemStats().then(console.log))\"",
    "health:scheduler": "node -e \"import('./src/services/reclassification-scheduler.service.js').then(m => new m.ReclassificationSchedulerService().getStatus().then(console.log))\"",
    "health:discovery": "node -e \"console.log('Discovery Health Check - TODO: Implement'); process.exit(0)\"",
    "status": "npm run health",
    "status:quick": "npm run classification:stats",
    "_comment_telegram": "=== TELEGRAM INTEGRATION ===",
    "telegram:setup": "node src/scripts/setup-telegram-bot.js",
    "telegram:test": "node src/scripts/setup-telegram-bot.js --test",
    "_comment_maintenance": "=== MAINTENANCE & CLEANUP ===",
    "cleanup": "npm run cleanup:classification && npm run cleanup:logs",
    "cleanup:classification": "node -e \"import('./src/services/classification-history.service.js').then(m => new m.ClassificationHistoryService().cleanupOldRecords(7).then(count => console.log('Cleaned up', count, 'old records')))\"",
    "cleanup:logs": "find ./logs -name '*.log' -mtime +7 -delete 2>/dev/null || echo 'No old logs to clean'",
    "cleanup:cache": "node -e \"console.log('Cache cleanup - TODO: Implement'); process.exit(0)\"",
    "_comment_development": "=== DEVELOPMENT & DEBUGGING ===",
    "dev:discovery": "nodemon --exec \"node\" src/scripts/enhanced-token-discovery-loop.js",
    "dev:review": "nodemon --exec \"node\" src/scripts/review-data.js",
    "dev:rpc": "nodemon --exec \"node\" src/services/rpc-connection-manager.js",
    "debug:classification": "NODE_ENV=development DEBUG=classification:* node src/scripts/enhanced-token-discovery-loop.js",
    "debug:discovery": "NODE_ENV=development DEBUG=discovery:* node src/scripts/enhanced-token-discovery-loop.js",
    "debug:rpc": "NODE_ENV=development DEBUG=rpc:* node src/services/rpc-connection-manager.js",
    "_comment_quick_actions": "=== QUICK ACTIONS ===",
    "quick:setup": "npm run classification:setup",
    "quick:start": "npm run start:thorp",
    "quick:review": "npm run review",
    "quick:status": "npm run status:quick",
    "quick:health": "npm run health",
    "_comment_reporting": "=== REPORTING & EXPORTS ===",
    "report:daily": "node src/scripts/review-data.js --daily --export",
    "report:weekly": "node src/scripts/review-data.js --weekly --export",
    "report:monthly": "node src/scripts/review-data.js --monthly --export",
    "export:classifications": "node -e \"import('./src/models/classificationHistory.js').then(m => m.ClassificationHistory.find({}).then(data => console.log(JSON.stringify(data, null, 2))))\" > exports/classifications.json",
    "export:fresh-gems": "node -e \"import('./src/models/classificationHistory.js').then(m => m.ClassificationHistory.find({current_status: 'fresh-gem'}).then(data => console.log(JSON.stringify(data, null, 2))))\" > exports/fresh-gems.json",
    "_comment_backup": "=== BACKUP & RESTORE ===",
    "backup:classifications": "mongodump --db thorp --collection classification_history --out ./backups/$(date +%Y%m%d_%H%M%S)",
    "backup:audit": "mongodump --db thorp --collection classification_audit_trail --out ./backups/$(date +%Y%m%d_%H%M%S)",
    "restore:classifications": "mongorestore --db thorp --collection classification_history ./backups/latest/thorp/classification_history.bson",
    "_comment_mvp_validation": "=== MVP VALIDATION WORKFLOW ===",
    "mvp:setup": "npm run classification:setup && npm run seed:smart-wallets && npm run health",
    "mvp:start": "echo '🚀 Starting MVP validation...' && npm run start:thorp",
    "mvp:review": "echo '📊 MVP Performance Review:' && npm run review:performance && npm run analytics:success-rate",
    "mvp:status": "echo '📈 MVP Status Check:' && npm run status && npm run review:daily",
    "_comment_build": "=== BUILD & COMPILATION ===",
    "build": "echo 'No build step needed for pure JavaScript'",
    "build:rpc": "echo 'RPC Manager ready for production'",
    "postinstall": "echo 'ThorpV1 dependencies installed successfully'"
  },
  "dependencies": {
    "@msgpack/msgpack": "^3.1.2",
    "@solana/spl-token": "^0.4.12",
    "@solana/web3.js": "^1.98.0",
    "axios": "^1.8.1",
    "cheerio": "^1.1.0",
    "cors": "^2.8.5",
    "csv-parse": "^5.6.0",
    "csv-stringify": "^6.5.2",
    "dotenv": "^16.6.1",
    "express": "^4.21.2",
    "helmet": "^8.1.0",
    "hot-shots": "^10.2.1",
    "ioredis": "^5.6.1",
    "joi": "^17.13.3",
    "mongodb": "^6.14.2",
    "mongoose": "^8.12.1",
    "node-cache": "^5.1.2",
    "node-cron": "^4.1.0",
    "node-fetch": "^3.3.2",
    "node-telegram-bot-api": "^0.66.0",
    "opossum": "^5.0.1",
    "papaparse": "^5.5.3",
    "puppeteer": "^24.4.0",
    "redis": "^5.6.1",
    "sqlite": "^5.1.1",
    "sqlite3": "^5.1.7",
    "winston": "^3.17.0",
    "xlsx": "^0.18.5"
  },
  "devDependencies": {
    "@types/cheerio": "^0.22.35",
    "@types/cors": "^2.8.18",
    "@types/dotenv": "^6.1.1",
    "@types/express": "^5.0.0",
    "@types/helmet": "^0.0.48",
    "@types/jest": "^29.5.14",
    "@types/joi": "^17.2.3",
    "@types/mongoose": "^5.11.96",
    "@types/node": "^20.17.24",
    "@types/node-cron": "^3.0.11",
    "@types/node-fetch": "^2.6.12",
    "@types/node-telegram-bot-api": "^0.64.7",
    "@types/opossum": "^8.1.8",
    "@types/papaparse": "^5.3.16",
    "@types/puppeteer": "^5.4.7",
    "jest": "^29.7.0",
    "nodemon": "^3.0.1",
    "ts-jest": "^29.2.5",
    "ts-node": "^10.9.2",
    "typescript": "^5.8.2"
  },
  "directories": {
    "test": "tests",
    "exports": "exports",
    "backups": "backups"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/rarara59/thorpv1.git"
  },
  "keywords": [
    "solana",
    "meme-coin",
    "trading",
    "edge-detection",
    "blockchain",
    "cryptocurrency",
    "smart-money",
    "classification",
    "mvp-validation",
    "automated-trading",
    "rpc-manager",
    "websocket",
    "real-time",
    "renaissance-trading"
  ],
  "author": "Renaissance Trading Systems",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/rarara59/thorpv1/issues"
  },
  "homepage": "https://github.com/rarara59/thorpv1#readme"
}
